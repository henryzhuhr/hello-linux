# 构建 VitePress 站点并将其部署到 GitHub Pages 的示例工作流程
# 在存储库设置中的“Pages”菜单项下，选择“Build and deployment > Source > GitHub Actions”。
name: Deploy VitePress site to Pages

# 事件触发工作流程: https://docs.github.com/zh/actions/writing-workflows/choosing-when-your-workflow-runs/triggering-a-workflow#using-events-to-trigger-workflows
on:
  # 当 push 到分支时触发部署
  push:
    branches:   
      - dev

  # 允许你从 Actions 选项卡手动运行此工作流程 : https://docs.github.com/zh/actions/writing-workflows/choosing-when-your-workflow-runs/triggering-a-workflow#defining-inputs-for-manually-triggered-workflows
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # @see https://github.com/actions/checkout
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.0.0 # @see https://github.com/marketplace/actions/setup-pnpm
        with:
          version: 9
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4 # @see https://github.com/actions/setup-node
        with:
          node-version: 20
          cache: pnpm # 或 npm / yarn

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: pnpm install # 或 npm ci / yarn install / bun install
      
      - name: Build with VitePress
        run: pnpm docs:build # 或 npm run docs:build / yarn docs:build / bun run docs:build
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .vitepress/dist

  # 部署工作
  deploy:
    name: Deploy
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    
    # Deploy to the github-pages environment
    environment:
      name: github-pages # 请到 “Settings > Environments” 中删除此环境的保护规则，否则部署将失败
      url: ${{ steps.deployment.outputs.page_url }}
    
    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # see: https://github.com/actions/deploy-pages